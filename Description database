Для просмотра схемы:
1) Перейти на https://start.jhipster.tech/jdl-studio/
2) Скопировать и вставать код.
3) Посмотреть.

//Схема только разрабатывается
entity Car {
	carID Int,
    model String,
    civicNumber String,
    birthday Date,
    carryCapacity Double
    }
entity Cargo{
	cargoID Int,
    name String,
    isKeepUpTemperatures Bool,
    temperatures Double
}

entity Company{
	companyID Int,
    name String
}

//договор-заявка
//нужно еще хранить в формате pdf
entity Contract {
	contractID Int,
    num String,
    date DateTime,
    price Decimal,
    isOurCar Bool
}

entity Driver{
	driverID Int,
 	firstName String,
    lastName String,
    birthday Date
}

relationship OneToOne{
 Company to Address
}

relationship OneToMany {
	Contract to Car,
    Contract to Driver,
    Contract to Cargo,
    Contract to Company
    }
//-----------------------------------//

entity Trip{
	tripID Int,
    number Int,//номер рейса в кругорейсе
    //нужно подумать
    dateB DateTime,
    dateE DateTime,
    distance Double,//пройдено км
    fuel Double,//расход топлива
    source[] String,//точка загрузки 
    destination[] String //точка загрузки  
}
entity Coordinates{
	longitude Decimal,//долгота
    latitude Decimal//широта
}
entity PointOfMap{
	localityName String,//название нас пункта
    address String,// сделать отдельной сущностью    
}
entity CircleTrip{
	circleTripID Int,
    number String,
    countDays Int,
    distance Double,//пройдено км
    fuel Double//расход топлива    
    }
entity TypeOfTrip{
	typeOfTrip Int, 
    name String
    //"обратка" "прямой"
    //нужно для определения целесообразности
 }
 entity Address{
 	country String,
    region String,//область
  	city String,
    street String,
    hause String,
    postcode String    
 }
 relationship OneToMany {
	Trip to PointOfMap   
    }
relationship ManyToOne {
	Trip to CircleTrip,
    Trip to TypeOfTrip
    Trip to Contract
    }
 relationship OneToOne {
	PointOfMap to Coordinates,
    PointOfMap to Address
    }
    
    entity Receipt{
    //поступление денег
    receipt Int  
    }
    
  entity TypeOfReceipt{
    typeOfReceipt Int
    }
    
  entity Expense{
  expenseID Int,
  summ Decimal,
  date DateTime,
  description String
  }
  
  entity Wallet{
  	walletID Int,
  	summ Decimal
   //тут много вопросов
   //хочу сделать отсдеживание движения денег
   //причем как по отдельным кошелькам, так и всех вместе
  }
  
  entity TypeOfWallet{
  	typeOfWallet Int,
  	number String
  //наличные, карты, р/с
  }
  
  entity TypeOfExpence{
  	typeOfExpence Int
    //топливо,зп,
    //оплата кредита, ТО
    //ремонт
  }
  
  
   relationship ManyToOne {
	Expense to Wallet,
    Receipt to Wallet,
    Receipt to Contract    
    }
    
    relationship OneToMany {
	Wallet to TypeOfWallet,
    Expense to TypeOfExpence,
    Receipt to TypeOfReceipt    
    }
